{{- $internal := .Values.internal | default dict -}}
{{- $mesh := $internal.mesh | default dict -}}
{{- $ingressPath := include "obcerv-app-centralised-config-rest-server.ingressPath" . }}

apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "obcerv-app-centralised-config-rest-server.fullname" . }}
  labels:
  {{- include "obcerv-app-centralised-config-rest-server.labels" . | nindent 4 }}
spec:
  replicas: 1
  selector:
    matchLabels:
  {{- include "obcerv-app-centralised-config-rest-server.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      annotations:
      {{- with .Values.podAnnotations }}
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- if $mesh.enabled }}
        {{- with $mesh.annotations }}
          {{- toYaml . | nindent 8 }}
        {{- end }}
      {{- end }}
      labels:
    {{- include "obcerv-app-centralised-config-rest-server.selectorLabels" . | nindent 8 }}
    spec:
      {{- if .Values.imagePullSecrets }}
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
      {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- else }}
      imagePullSecrets:
      - name: itrsdocker
      {{- end }}
      initContainers:
      - name: init-obcerv-app-centralised-config-daemon
        image: "{{ .Values.docker.thirdPartyRegistry }}{{ .Values.utils.image.repository }}:{{ .Values.utils.image.tag }}"
        imagePullPolicy: {{ .Values.utils.image.pullPolicy | default "IfNotPresent" }}
        # https://kubernetes.io/docs/concepts/workloads/pods/init-containers/#init-containers-in-use
        command: [ 'sh', '-c', "until nslookup obcerv-app-centralised-config-daemon.$(cat /var/run/secrets/kubernetes.io/serviceaccount/namespace).svc.cluster.local; do echo waiting for obcerv-app-centralised-config-daemon; sleep 2; done" ]
      containers:
      - name: {{ include "obcerv-app-centralised-config-rest-server.fullname" . }}
        securityContext:
          {{- toYaml .Values.securityContext | nindent 12 }}
        image: "{{ .Values.docker.registry }}{{ .Values.restServer.image.repository }}:{{ .Values.restServer.image.tag | default .Chart.AppVersion }}"
        imagePullPolicy: {{ .Values.restServer.image.pullPolicy | default "IfNotPresent" }}
        ports:
        - name: service
          containerPort: {{ (.Values.restServer.service).port | default 50052 }}
          protocol: TCP

        command:
        - java
        - -XX:+UseContainerSupport
        - -XX:InitialRAMPercentage=75
        - -XX:MaxRAMPercentage=75
        - -Dlogback.configurationFile=/app/config/logback.xml
        - -jar
        - /app/obcerv-app-centralised-config-rest-server-{{ .Chart.AppVersion }}.jar

        env:
        - name: OBCERV_APP_CENTRALISED_CONFIG_GRPC_DAEMON_SERVICE_HOST
          value: "{{ include "obcerv-app-centralised-config-daemon.fullname" . }}.{{ .Release.Namespace }}.svc.cluster.local"
        - name: OBCERV_APP_CENTRALISED_CONFIG_GRPC_DAEMON_SERVICE_PORT
          value: {{ (.Values.daemon).port | default 50052 | quote }}
        - name: OBCERV_APP_CENTRALISED_CONFIG_REST_SERVER_PORT
          value: {{ (.Values.restServer).port | default 50052 | quote }}
        - name: OBCERV_APP_CENTRALISED_CONFIG_REST_SERVER_BASE_PATH
          value: {{ $ingressPath | quote }}
        - name: OBCERV_APP_CENTRALISED_CONFIG_EXTERNAL_URL
          value: "https://{{ .Values.externalHostname }}{{ $ingressPath }}"
        {{- if .Values.restServer.maxMessageSizeBytes }}
        - name: OBCERV_APP_CENTRALISED_CONFIG_MAX_MSG_SIZE_BYTES
          value: {{ .Values.restServer.maxMessageSizeBytes | quote }}
        {{- end }}
        - name: OBCERV_APP_CENTRALISED_CONFIG_GRPC_DEADLINE
          value: {{ .Values.grpcTimeout | default "PT30S" }}
        - name: OBCERV_APP_CENTRALISED_CONFIG_GRPC_COMPRESSION_ENABLED
          value: {{ (.Values.grpcCompression).enabled | default false | quote }}
        - name: OBCERV_APP_CENTRALISED_CONFIG_REST_REQUEST_LOGGING_ENABLED
          value: {{ (.Values.restServer).requestLogging | default false | quote }}
        - name: OBCERV_APP_CENTRALISED_CONFIG_GRPC_REQUEST_LOGGING_ENABLED
          value: {{ (.Values.grpcLogging).enabled | default false | quote }}
        - name: OBCERV_APP_CENTRALISED_CONFIG_GRPC_RESPONSE_LOGGING_ENABLED
          value: {{ (.Values.grpcLogging).responses | default false | quote }}
        - name: STATSD_SERVER
          valueFrom:
            fieldRef:
              {{- if (.Values.statsd).server }}
              fieldPath: {{ (.Values.statsd).server }}
              {{- else }}
              fieldPath: status.hostIP
              {{- end }}
        - name: STATSD_PROTOCOL
          valueFrom:
            configMapKeyRef:
              name: instance-config
              key: collection.statsd.transport-protocol
        - name: STATSD_PORT
          valueFrom:
            configMapKeyRef:
              name: instance-config
              key: collection.statsd.listen-port
        - name: NODE
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        - name: NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: POD
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: CONTAINER
          value: {{ include "obcerv-app-centralised-config-rest-server.fullname" . }}
        readinessProbe:
          httpGet:
            scheme: HTTP
            port: {{ (.Values.restServer.service).port | default 50052 }}
            path: {{ $ingressPath }}/ping
          initialDelaySeconds: 10
          periodSeconds: 10
          failureThreshold: 6

        livenessProbe:
          httpGet:
            scheme: HTTP
            port: {{ (.Values.restServer.service).port | default 50052 }}
            path: {{ $ingressPath }}/ping
          initialDelaySeconds: 10
          periodSeconds: 10
          failureThreshold: 6

        resources:
        {{- if (.Values.restServer).resources }}
        {{- toYaml (.Values.restServer).resources | nindent 12 }}
        {{- else }}
          requests:
            memory: "128Mi"
            cpu: "100m"
          limits:
            memory: "256Mi"
            cpu: "300m"
        {{- end }}
        volumeMounts:
          - name: config-volume
            mountPath: /app/config
      volumes:
      - name: config-volume
        configMap:
          name: {{ include "obcerv-app-centralised-config-rest-server.fullname" . }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
      {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
      {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
      {{- toYaml . | nindent 8 }}
      {{- end }}
