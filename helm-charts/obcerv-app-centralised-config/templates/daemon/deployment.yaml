{{- $internal := .Values.internal | default dict -}}
{{- $mesh := $internal.mesh | default dict -}}
{{- $iam := $internal.iam | default dict -}}
{{- $iamEnabled := $iam.enabled | default true -}}

apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "obcerv-app-centralised-config-daemon.fullname" . }}
  labels:
  {{- include "obcerv-app-centralised-config-daemon.labels" . | nindent 4 }}
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
  {{- include "obcerv-app-centralised-config-daemon.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      annotations:
      {{- with .Values.podAnnotations }}
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- if $mesh.enabled }}
        {{- with $mesh.annotations }}
          {{- toYaml . | nindent 8 }}
        {{- end }}
      {{- end }}
      labels:
    {{- include "obcerv-app-centralised-config-daemon.selectorLabels" . | nindent 8 }}
    spec:
      {{- if .Values.imagePullSecrets }}
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
      {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- else }}
      imagePullSecrets:
      - name: itrsdocker
      {{- end }}
      securityContext:
        {{- toYaml (.Values.internal.daemon).securityContext | nindent 8 }}
      containers:
      - name: {{ include "obcerv-app-centralised-config-daemon.fullname" . }}
        securityContext:
          {{- toYaml .Values.securityContext | nindent 12 }}
        image: "{{ .Values.docker.registry }}{{ .Values.daemon.image.repository }}:{{ .Values.daemon.image.tag | default .Chart.AppVersion }}"
        imagePullPolicy: {{ .Values.daemon.image.pullPolicy | default "IfNotPresent" }}
        ports:
        - name: service
          containerPort: {{ (.Values.daemon).port | default 50052 }}
          protocol: TCP

        command:
        - java
        - -Djdk.lang.Process.launchMechanism=vfork
        - -XX:+UseContainerSupport
        - -XX:InitialRAMPercentage=75
        - -XX:MaxRAMPercentage=75
        - -Dlogback.configurationFile=/app/config/logback.xml
        - -jar
        - /app/obcerv-app-centralised-config-daemon-{{ .Chart.AppVersion }}.jar
        - /app/config/config.yaml

        env:
        - name: IAM_ENABLED
          value: {{ $iamEnabled | quote }}
        - name: IAM_AUTHENTICATION_URL
          value: {{ $iam.scheme | default "http" }}://{{ $iam.host | default "keycloak" }}:{{ $iam.port | default "8080" }}
        - name: IAM_REALM
          value: {{ $iam.realm | default "obcerv" }}
        - name: IAM_CLIENT_ID
          value: {{ $iam.clientName | default "obcerv-apps" }}
        - name: IAM_CLIENT_SECRET
          valueFrom:
            secretKeyRef:
              name: {{ $iam.clientSecret | default "iam-apps-credentials" }}
              key: client-secret
        - name: STATSD_SERVER
          valueFrom:
            fieldRef:
              {{- if (.Values.statsd).server }}
              fieldPath: {{ (.Values.statsd).server }}
              {{- else }}
              fieldPath: status.hostIP
              {{- end }}
        - name: STATSD_PROTOCOL
          valueFrom:
            configMapKeyRef:
              name: instance-config
              key: collection.statsd.transport-protocol
        - name: STATSD_PORT
          valueFrom:
            configMapKeyRef:
              name: instance-config
              key: collection.statsd.listen-port
        - name: NODE
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        - name: NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: POD
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: CONTAINER
          value: {{ include "obcerv-app-centralised-config-daemon.fullname" . }}

        readinessProbe:
          httpGet:
            port: {{ .Values.healthProbePort | default 8080 }}
            path: /healthcheck
          initialDelaySeconds: 30
          periodSeconds: 10
          failureThreshold: 6

        livenessProbe:
          httpGet:
            port: {{ .Values.healthProbePort | default 8080 }}
            path: /healthcheck
          initialDelaySeconds: 30
          periodSeconds: 10
          failureThreshold: 6

        resources:
            {{- if (.Values.daemon).resources }}
            {{- toYaml (.Values.daemon).resources | nindent 12 }}
            {{- else }}
          requests:
            memory: "512Mi"
            cpu: "1"
          limits:
            memory: "2Gi"
            cpu: "2"
          {{- end }}
        volumeMounts:
          - name: gateway-binary-storage
            mountPath: {{ (.Values.daemon.persistence).mountPath | default "/gateways" }}
          - name: config-volume
            mountPath: /app/config
      volumes:
      - name: gateway-binary-storage
        persistentVolumeClaim:
          claimName: {{ include "obcerv-app-centralised-config-daemon.fullname" . }}
      - name: config-volume
        configMap:
          name: {{ include "obcerv-app-centralised-config-daemon.fullname" . }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
      {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
      {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
      {{- toYaml . | nindent 8 }}
      {{- end }}
