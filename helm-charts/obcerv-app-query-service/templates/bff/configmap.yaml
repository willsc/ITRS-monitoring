{{- $logQueries := or .Values.queryLoggingEnabled .Values.bff.queryLoggingEnabled -}}
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ include "obcerv-app-query-service-bff.fullname" . }}
data:
  config.yaml: |-
    monitoring:
      health-probe:
        listen-port: {{ .Values.healthProbePort | default 8080 }}

    grpc-servers:
      - port: {{ .Values.bff.port | default 50052 }}
        thread-pool-size: {{ .Values.bff.threadPoolSize | default 20 }}
        interceptors:
          - type: error-handling
        {{- if (.Values.grpcLogging).enabled | default false }}
          - type: logging
            logResponses: {{ (.Values.grpcLogging).responses | default false }}
            {{- if (.Values.grpcLogging).include }}
            {{- with (.Values.grpcLogging).include }}
            included:
            {{- toYaml . | nindent 14 }}
            {{- end }}
            {{- end }}
            {{- if (.Values.grpcLogging).exclude }}
            {{- with (.Values.grpcLogging).exclude }}
            excluded:
            {{- toYaml . | nindent 14 }}
            {{- end }}
            {{- end }}
        {{- end }}
    grpc-services:
      - type: bff
        port: {{ .Values.bff.port | default 50052 }}
        rpcCallTimeout: {{ .Values.bff.rpcCallTimeout | default "PT30S" }}
        minQueryLogDuration: {{ .Values.bff.minQueryLogDuration | default "PT1S" }}
        dataSourceService: postgres

    services:
      - type: pg-data-source
        name: postgres
        url: "jdbc:postgresql://{{ include "obcerv-app-query-service-db.fullname" . }}:${env:OBCERV_APP_QUERY_SERVICE_DB_SERVICE_PORT}/${env:POSTGRES_DB}"
        username: ${env:POSTGRES_USER}
        password: ${env:POSTGRES_PASSWORD}
        keepAliveMs: {{ .Values.bff.keepAliveMs | default 300000 }}
        maxConnections: {{ .Values.bff.maxConnections | default 20 }}
        autoCommit: {{ .Values.bff.autoCommit | default false }}
        readOnly: true

      - type: permissions
        iam-service-name: {{ ((.Values.internal).iam).host | default "keycloak" }}
        iam-service-port: {{ ((.Values.internal).iam).port | default 8080 }}
        realm: {{ ((.Values.internal).iam).realm | default "obcerv" }}
        client-application-name: {{ ((.Values.internal).iam).clientName | default "obcerv-apps" }}
        public-key-cache-ttl-days: 1

      - type: platform-client-supplier
        services:
          - type: entity-service
            hostname: entity.{{ .Release.Namespace }}.svc.cluster.local
            port: 7159
          - type: metric-service
            hostname: metric-query.{{ .Release.Namespace }}.svc.cluster.local
            port: 7157
  logback.xml: |-
    <configuration>
      <appender name="stdout" class="ch.qos.logback.core.ConsoleAppender">
        <encoder>
          <pattern>%d{"yyyy-MM-dd'T'HH:mm:ss.SSSXXX", UTC} [%thread] %-5level %logger - %msg%n
          </pattern>
        </encoder>
      </appender>

    {{- if $logQueries }}
      <logger name="queryservice.QueryPerformanceLogger" level="debug"/>
    {{- end }}

      <logger name="io.grpc" level="info"/>
      <logger name="io.netty" level="info"/>
      <logger name="org.jooq.Constants" level="error"/>
      <logger name="org.jooq.tools.LoggerListener" level="info"/>

      <root level="{{ .Values.loglevel | default "INFO" }}">
        <appender-ref ref="stdout"/>
      </root>
    </configuration>
