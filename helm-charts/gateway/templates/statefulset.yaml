apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "gateway.fullname" . }}
  labels:
    {{- include "gateway.labels" . | nindent 4 }}
spec:
  podManagementPolicy: Parallel
  # There can only be one replica.
  replicas: 1
  selector:
    matchLabels:
      {{- include "gateway.matchLabels" . | nindent 6 }}
  serviceName: {{ include "gateway.fullname" . }}-headless
  updateStrategy:
    type: RollingUpdate
  template:
    metadata:
      labels:
        {{- include "gateway.labels" . | nindent 8 }}
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
    spec:
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
      {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.securityContext }}
      securityContext:
        {{- toYaml . | nindent 10 }}
      {{- end }}
      serviceAccount: {{ include "gateway.serviceAccountName" . }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      containers:
      - name: gateway
        image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        ports:
        - containerPort: 7039
          name: gateway
        volumeMounts:
        - name: config-gci
          mountPath: /gateway/config
          readOnly: true
        - name: config-initial-setup
          mountPath: /gateway/initial_setup
          readOnly: true
        - name: persist
          mountPath: /gateway/persist
          readOnly: false
        {{- if .Values.tls.enabled }}
        - name: tls
          mountPath: /secrets
          readOnly: true
        {{- end }}
        readinessProbe:
          httpGet:
            path: /liveness
            port: 7039
            {{- if .Values.tls.enabled }}
            scheme: HTTPS
            {{- end }}
          periodSeconds: 10
          failureThreshold: 6
        livenessProbe:
          httpGet:
            path: /liveness
            port: 7039
            {{- if .Values.tls.enabled }}
            scheme: HTTPS
            {{- end }}
          initialDelaySeconds: 60
        resources:
          {{- toYaml .Values.resources | nindent 10 }}
      volumes:
      - name: config-gci
        configMap:
          name: {{ include "gateway.fullname" . }}
          items:
          - key: gateway.gci
            path: gateway.gci
      - name: config-initial-setup
        configMap:
          name: {{ include "gateway.fullname" . }}
          items:
          - key: gateway.setup.xml
            path: gateway.setup.xml
      {{- if not .Values.persistence.enabled }}
      - name: persist
        emptyDir: {}
      {{- end }}
      {{- if .Values.tls.enabled }}
      - name: tls
        secret:
          secretName: {{ .Values.tls.secret | required "tls.secret is required" }}
          defaultMode: 0400
      {{- end }}
  {{- if .Values.persistence.enabled }}
  volumeClaimTemplates:
  - apiVersion: v1
    kind: PersistentVolumeClaim
    metadata:
      name: persist
    spec:
      accessModes:
      - ReadWriteOnce
      {{- with .Values.persistence.storageClassName }}
      storageClassName: {{ . }}
      {{- end }}
      resources:
        requests:
          storage: {{ .Values.persistence.size }}
  {{- end }}