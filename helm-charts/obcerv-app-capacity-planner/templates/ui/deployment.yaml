{{- $internal := .Values.internal | default dict -}}
{{- $iam := $internal.iam | default dict -}}
{{- $mesh := $internal.mesh | default dict -}}
{{- $meshAnnotations := $mesh.annotations | default dict -}}
{{- $iamEnabled := $iam.enabled | default true -}}
{{- $ingress := .Values.ingress | default dict -}}
{{- $dockerRegistry := .Values.docker.registry | default "docker.itrsgroup.com" -}}
{{- $imagePath := .Values.image.repository | default .Release.Name -}}
{{- $image := printf "%s%s" $dockerRegistry $imagePath -}}
{{- $defaultPath := printf "/%s/" .Release.Name -}}
{{- $path := $ingress.path | default $defaultPath }}

apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "obcerv-app-capacity-planner-ui.fullname" . }}
  labels:
    {{- include "obcerv-app-capacity-planner-ui.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount | default 1 }}
  strategy:
    type: Recreate
  selector:
    matchLabels:
      {{- include "obcerv-app-capacity-planner-ui.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "obcerv-app-capacity-planner-ui.selectorLabels" . | nindent 8 }}
      annotations:
    {{- with .Values.podAnnotations }}
        {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- if $mesh.enabled }}
      {{- with $mesh.annotations }}
        {{- toYaml . | nindent 8 }}
      {{- end }}
    {{- end }}
    spec:
      serviceAccount: obcerv-apps
      {{- if .Values.imagePullSecrets }}
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- else }}
      imagePullSecrets:
        - name: itrsdocker
      {{- end }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
          {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ $image }}:{{ .Chart.AppVersion  }}"
          imagePullPolicy: {{ .Values.image.pullPolicy | default "IfNotPresent"}}
          ports:
            - name: http
              containerPort: {{ $internal.containerPort | default 9999 }}
              protocol: TCP
            - name: management
              containerPort: {{ $internal.management | default 9998 }}
              protocol: TCP
          env:
            - name: APP_NAME
              value: {{ .Chart.Name }}
            - name: CONTAINER
              value: {{ .Chart.Name }}
            - name: NODE
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
            - name: POD
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: CA_HOST
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
            - name: CA_PORT
              value: "{{ .Values.caPort | default 8125 }}"
            - name: CA_PROTOCOL
              value: "udp"
            - name: SERVER_CONTEXT_PATH
              value: {{ $path }}
            - name: HZ_NETWORK_JOIN_MULTICAST_ENABLED
              value: "false"
            - name: HZ_NETWORK_JOIN_KUBERNETES_ENABLED
              value: "true"
            - name: HZ_NETWORK_JOIN_KUBERNETES_NAMESPACE
              value: {{ .Release.Namespace }}
            - name: HZ_NETWORK_JOIN_KUBERNETES_SERVICELABELNAME
              value: "app.kubernetes.io/group"
            - name: HZ_NETWORK_JOIN_KUBERNETES_SERVICELABELVALUE
              value: "web-platform"
            {{- if not $iamEnabled }}
            - name: SPRING_AUTOCONFIGURE_EXCLUDE
              value: "org.keycloak.adapters.springboot.KeycloakAutoConfiguration"
            {{- end }}
            - name: IAM_AUTHENTICATION_URL
              value: {{ $iam.scheme | default "http" }}://{{ $iam.host | default "keycloak" }}:{{ $iam.port | default "8080" }}
            - name: IAM_REALM
              value: {{ $iam.realm | default "obcerv" }}
            - name: IAM_DISABLE_TRUST_MANAGER
              value: {{ $iam.disableTrustManager | default "true" | quote }}
            - name: IAM_PUBLIC_CLIENT
              value: {{ $iam.publicClient | default "false" | quote }}
            - name: IAM_CLIENT_ID
              value: {{ $iam.clientName | default "obcerv-apps" }}
            - name: IAM_CLIENT_SECRET
              valueFrom:
                secretKeyRef:
                  name: iam-apps-credentials
                  key: client-secret
            {{- if .Values.env}}
              {{- toYaml .Values.env | nindent 12 }}
            {{- end }}
          readinessProbe:
            httpGet:
              path: /actuator/health/readiness
              port: management
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 12
          livenessProbe:
            httpGet:
              path: /actuator/health/liveness
              port: management
            initialDelaySeconds: 120
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 3
          resources:
          {{- if .Values.resources }}
          {{- toYaml .Values.resources | nindent 12 }}
          {{- else }}
            requests:
              memory: "256Mi"
              cpu: "200m"
            limits:
              memory: "1024Mi"
              cpu: "1000m"
        {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}