{{- if and (eq .Values.mode "DaemonSet") .Values.metrics.enabled }}
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ include "netprobe.fullname" . }}-metrics
data:
  config.yaml: |-
    plugin-directory: ./plugins
    monitoring:
      self-metrics:
        enabled: {{ .Values.agent.selfMetrics.enabled }}
        dimensions:
          {{- range $k, $v := .Values.agent.selfMetrics.customDimensions }}
          {{ toYaml $v }}
          {{- end }}
          {{- range $k, $v := .Values.customDimensions }}
          {{ toYaml $v }}
          {{- end }}
    reporters:
    - name: tcp
      type: tcp
      port: {{ .Values.netprobe.reporterPort }}
    collectors:
    - name: kube-metrics
      type: plugin
      class-name: KubernetesMetricsCollector
      exclude-non-namespaced: {{ .Values.metrics.excludeNonNamespaced }}
      {{- if .Values.namespaces }}
      namespaces:
      {{- $root := . }}
      {{- range $k, $v := .Values.namespaces }}
      - {{ tpl $v $root | quote }}
      {{- end }}
      {{- end }}
      processors:
      {{ include "netprobe.collectorEnrichmentProcessors" . | nindent 6 | trim }}
      {{- /*
        Only forward data points that are not node-specific.  This is due to
        netprobe limitation where two netprobes cannot report for the same
        managed entity. Node-specific metrics are handled by each DaemonSet instance.
      */}}
      - type: drop-filter
        matchers:
        - type: dimension
          key: node
          value-pattern: .+
    workflow:
      metrics:
        store:
          type: memory
          capacity: {{ .Values.agent.metricsQueueSize }}
        processors:
        - type: plugin
          name: geneos-workflow
          class-name: GeneosProcessor
      events:
        store:
          type: memory
      attributes:
        store:
          type: memory
          capacity: {{ .Values.agent.attributesQueueSize }}
      logs:
        enabled: false
      traces:
        enabled: false
  logback.xml: |-
    <configuration>
      <appender name="stdout" class="ch.qos.logback.core.ConsoleAppender">
        <encoder>
          <pattern>%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger - %msg%n</pattern>
        </encoder>
      </appender>
      {{- range $k, $v := .Values.agent.logging.loggers }}
      <logger name="{{ $k }}" level="{{ $v }}" />
      {{- end }}
      <root level="{{ .Values.agent.logging.rootLevel }}">
        <appender-ref ref="stdout" />
      </root>
    </configuration>
  config.xml: |-
    <netprobe compatibility="1"
              xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
              xsi:noNamespaceSchemaLocation="http://schema.itrsgroup.com/GA2011.2-110303/netprobe.xsd">
      <selfAnnounce>
        <enabled>true</enabled>
        <retryInterval>{{ .Values.netprobe.retryInterval }}</retryInterval>
        <requireReverseConnection>{{ .Values.netprobe.requireReverseConnection }}</requireReverseConnection>
        <probeName>{{ .Values.deployment.probeName }}</probeName>
        <managedEntities>
            {{- range $k, $v := .Values.managedEntities }}
            {{- if or (eq $v.target "allProbes") (eq $v.target "clusterLevelProbe") }}
            <managedEntity>
              <name>{{ required "Managed entity name must be configured" $v.name }}</name>
              <attributes>
                {{- range $kAttr, $vAttr := $v.attributes }}
                <attribute name="{{ $kAttr }}">{{ $vAttr }}</attribute>
                {{- end }}
              </attributes>
              <types>
                {{- range $v.types }}
                <type>{{ . }}</type>
                {{- end }}
              </types>
            </managedEntity>
            {{- end }}
            {{- end }}
        </managedEntities>
        <dynamicEntities>
          {{- range $k, $v := .Values.dynamicEntities.mappingTypes }}
          <mappingType>{{ $v }}</mappingType>
          {{- end }}
          <collectionAgentParameters>{{ .Values.netprobe.collectionAgentParameters }}</collectionAgentParameters>
        </dynamicEntities>
        <gateways>
          {{- range $k, $v := .Values.gateways }}
          <gateway>
            <hostname>{{ $v.host }}</hostname>
            <port>{{ $v.port }}</port>
            <secure>{{ $v.secure }}</secure>
          </gateway>
          {{- end }}
        </gateways>
      </selfAnnounce>
    </netprobe>
{{- end }}
