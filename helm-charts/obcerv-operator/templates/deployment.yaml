apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "obcerv-operator.fullname" . }}
  labels:
    {{- include "obcerv-operator.labels" . | nindent 4 }}
spec:
  strategy:
    type: Recreate
  replicas: 1
  selector:
    matchLabels:
      {{- include "obcerv-operator.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "obcerv-operator.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "obcerv-operator.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
      {{ if .Values.operator.enabled }}
      - name: operator
        securityContext:
          {{- toYaml .Values.securityContext | nindent 12 }}
        image: "{{ .Values.docker.registry }}/{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        command:
        - java
        - -XX:+UseContainerSupport
        - -XX:MaxRAMPercentage=75
        - -Dlogback.configurationFile=/app/config/logback.xml
        - -cp
        - /app/obcerv-operator.jar
        - com.itrsgroup.platform.kube.operator.ObcervOperator
        env:
        - name: WORKDIR
          value: "/work"
        {{- if .Values.namespaces }}
        - name: NAMESPACES
          {{- $val := "" }}
          {{- range $k,$ns := .Values.namespaces }}
          {{- $val = printf "%s%s," $val (tpl $ns $) }}
          {{- end }}
          value: "{{ $val }}"
        {{- end }}
        {{- with .Values.apiConnectionTimeout }}
        - name: KUBERNETES_CONNECTION_TIMEOUT
          value: "{{ . }}"
        {{- end }}
        {{- with .Values.apiRequestTimeout }}
        - name: KUBERNETES_REQUEST_TIMEOUT
          value: "{{ . }}"
        {{- end }}
        {{- with .Values.apiDisableBackwardsCompatibilityInterceptor }}
        - name: KUBERNETES_BACKWARDSCOMPATIBILITYINTERCEPTOR_DISABLE
          value: "{{ . }}"
        {{- end }}
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8080
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
        readinessProbe:
          httpGet:
            path: /healthz
            port: 8080
          initialDelaySeconds: 5
          periodSeconds: 5
          timeoutSeconds: 5
        resources:
          {{- toYaml .Values.resources | nindent 12 }}
        volumeMounts:
        - name: config
          mountPath: /app/config
          readOnly: true
        - name: work
          mountPath: /work
          readOnly: false
      {{- end }}
      - name: webhook
        securityContext:
          {{- toYaml .Values.securityContext | nindent 12 }}
        image: "{{ .Values.docker.registry }}/{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        command:
        - java
        - -XX:+UseContainerSupport
        - -XX:MaxRAMPercentage=75
        - -Dlogback.configurationFile=/app/config/logback.xml
        - -cp
        - /app/obcerv-operator.jar
        - com.itrsgroup.platform.kube.webhooks.WebhookServerMain
        env:
        - name: KEYSTORE_PATH
          value: "/tls/{{ .Values.webhook.tls.keystoreSecretKey }}"
        - name: KEYSTORE_PASSWORD
          valueFrom:
            secretKeyRef:
              name: {{ tpl .Values.webhook.tls.keystorePasswordSecret . }}
              key: password
        - name: SERVICE_ACCOUNT
          value: {{ include "obcerv-operator.serviceAccountName" . }}
        {{- with .Values.apiConnectionTimeout }}
        - name: KUBERNETES_CONNECTION_TIMEOUT
          value: "{{ . }}"
        {{- end }}
        {{- with .Values.apiRequestTimeout }}
        - name: KUBERNETES_REQUEST_TIMEOUT
          value: "{{ . }}"
        {{- end }}
        {{- with .Values.apiDisableBackwardsCompatibilityInterceptor }}
        - name: KUBERNETES_BACKWARDSCOMPATIBILITYINTERCEPTOR_DISABLE
          value: "{{ . }}"
        {{- end }}
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8443
            scheme: HTTPS
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
        readinessProbe:
          httpGet:
            path: /healthz
            port: 8443
            scheme: HTTPS
          initialDelaySeconds: 5
          periodSeconds: 5
          timeoutSeconds: 5
        resources:
          {{- toYaml .Values.webhook.resources | nindent 12 }}
        volumeMounts:
        - name: config
          mountPath: /app/config
          readOnly: true
        - name: tls
          mountPath: /tls
          readOnly: true
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      volumes:
      - name: work
        emptyDir: {}
      - name: config
        configMap:
          name: {{ include "obcerv-operator.fullname" . }}
      - name: tls
        secret:
          secretName: {{ tpl .Values.webhook.tls.keystoreSecret . }}
